const int topSensorPin = A0;
const int botSensorPin = A1;

const int buttonPin = 2;  

int topSensorValue = 0;
int botSensorValue = 0;

int buttonCount = 0;

int baselineMax = 0; // upper bound of what is considered "normal light"
int baselineMin = 1000; // lower bound of what is considered "normal light"

int obstructedMax = 0; // upper bound of what is considered "obstructed light"
int obstructedMin = 1000; // lower bound of what is considered "obstructed light"

int currTopSensorValue = 0;
int currBotSensorValue = 0;

int prevTopSensorValue = 0;
int prevBotSensorValue = 0;

unsigned long topTime0 = 0;
unsigned long topTime1 = 0;
unsigned long botTime0 = 0;
unsigned long botTime1 = 0;

void setup() {
  // put your setup code here, to run once:
  pinMode(buttonPin, INPUT); // set button as an input
  
  Serial.begin(9600);

  while (digitalRead(buttonPin == LOW)){ // While waiting for a button press ...

    if (digitalRead(buttonPin) == HIGH){ // If a button press is detected ...

      if (buttonCount == 0 && digitalRead(buttonPin) == HIGH){ // If the button has never been pressed before ...
        
        for (int iterBaseline = 0; iterBaseline < 1000; iterBaseline ++){
          topSensorValue = analogRead(topSensorPin); // using the top sensor so that the ball can sit at the bottom of the tube
          
          if(topSensorValue < baselineMin){
            baselineMin = topSensorValue;
          }
          
          else if (topSensorValue > baselineMax){
            baselineMax = topSensorValue;
          }
        }
        buttonCount = 1;
        Serial.print("The baseline minimum light value is: ");
        Serial.print(baselineMin);
        Serial.print("\n");
        Serial.print("The baseline maximum light value is: ");
        Serial.print(baselineMax);
        Serial.print("\n");
        delay(6000);
      }

      if (buttonCount == 1 && digitalRead(buttonPin) == HIGH){ // If the button has been pressed once before ...
        
        for (int iterBaseline = 0; iterBaseline < 1000; iterBaseline ++){
          botSensorValue = analogRead(botSensorPin); // using the bottom sensor so that the ball can sit at the bottom of the tube
              
          if(botSensorValue < obstructedMin){
            obstructedMin = botSensorValue;
          }
              
          else if (botSensorValue > obstructedMax){
            obstructedMax = botSensorValue;
          }
        }
        buttonCount = 2;
        Serial.print("The obstructed minimum light value is: ");
        Serial.print(obstructedMin);
        Serial.print("\n");
        Serial.print("The obstructed maximum light value is: ");
        Serial.print(obstructedMax);
        Serial.print("\n");
        delay(6000);
      }

    while (buttonCount == 2){ // If both modes have been calibrated ...
      ;
      if (digitalRead(buttonPin) == HIGH){
        buttonCount = 3;
      }
    }

    if (buttonCount == 3){
      break;
    }
   }
  }
}

void loop() {
  
  currTopSensorValue = analogRead(topSensorPin);
  currBotSensorValue = analogRead(botSensorPin);

  if (currTopSensorValue < obstructedMax + 6 && currTopSensorValue > obstructedMin - 6){
    topTime0 = millis();
    Serial.print("Top Time 0 is: ");
    Serial.print(topTime0);
    Serial.print("\n");
  }

  if (currBotSensorValue < obstructedMax + 6 && currBotSensorValue > obstructedMin - 6){
    botTime0 = millis();
    Serial.print("Bottom Time 0 is: ");
    Serial.print(botTime0);
    Serial.print("\n");
  }

  else {
    ;
  }
  
}

